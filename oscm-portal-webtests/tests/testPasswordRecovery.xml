<!-- Copyright FUJITSU LIMITED 2017-->
<!DOCTYPE project SYSTEM "../dtd/Project.dtd">
<project default="test_passwordRecovery" xmlns:setup="antlib:org.oscm.webtest.setup">
  <import file="../macros/all.xml" />

	<target name="setup">
	  <webtest name="test_passwordRecovery_setup">	
	    <!-- Setup an organization (using blue portal) -->
	  	<scenario.setupSupplier />
	  	<operator.createMarketplace mIdProperty="mId" name="Global Marketplace" />
	  	<landingpage.setSortOrderForLandingpageWithLogin mId="${mId}" />      

	  	<storeProperty name="supplierUrl" value="${supplierUrl}" propertyType="ant" />
	  	<storeProperty name="supplierUserId" value="${supplierUserId}" propertyType="ant" />
	  	<storeProperty name="supplierId" value="#{orgId}" propertyType="ant" />
	  	<operator.addSupplierToGlobalMarketplace supplierId="${supplierId}" marketplaceId="${mId}" />

	  	<!-- Register a customer (using web service) -->
	  	<setup:accountservice.registerCustomer supplierId="${supplierId}" userId="customer" marketplaceId="${mId}" />
	  	<mail.readConfirmUrlFromMail />
	  	<invoke url="#{confirmUrl}" />
	  	<clickLink htmlId="confirmForm:continueLink" />
	  	<property name="customerUserId" value="${createdUserId}" />
	  	<storeProperty name="marketplaceUrl" value="${mail.anyurl}/marketplace" />
	  </webtest>
	</target>
	
    <target name="test_passwordRecovery" depends="setup">  
  	
      <webtest name="bug10178_Back button is not displayed">
    	<mail.cleanInbox />
    	<storeProperty name="baseUrl" value="${mail.anyurl}/public" />
    	<storeProperty name="recoverPasswordUrl" value="#{baseUrl}/recoverPassword.jsf" />   
    	<dataDriven tableContainer="data/pageFields/recoverPasswordFields.xls">
    	  <invoke url="${mail.anyurl}/image?webtest=1" />
    	  <invoke url="#{recoverPasswordUrl}" />
    	  <storeProperty name="required" value="${required}" propertyType="dynamic" />
    	  <clickElement htmlId="recoveryform:back" />
    	  <verifyXPath xpath="//*[@id='loginButton']" />
    	</dataDriven>
      </webtest>
    
    	
	  <webtest name="testMPL_validatePasswordRecoveryFields"> 	
	    <mail.cleanInbox />
	    <storeProperty name="baseUrl" value="${mail.anyurl}/public" />
        <storeProperty name="recoverPasswordUrl" value="#{baseUrl}/recoverPassword.jsf" />   
	  	<dataDriven tableContainer="data/pageFields/recoverPasswordFields.xls">
	  	<invoke url="${mail.anyurl}/image?webtest=1" />
	  	<invoke url="#{recoverPasswordUrl}" />
        <storeProperty name="required" value="${required}" propertyType="dynamic" />
        <clickElement htmlId="recoveryform:continueButtonLink" />
        <common.verifyInvalidFieldValue fieldId="${fieldId}" fieldType="${fieldType}" buttonLinkId="recoveryform:continueButtonLink" required="${required}" />
      </dataDriven>   
	  </webtest>

	  <webtest name="test_passwordRecovery_From_ClassicPortal">
	    <storeProperty name="baseUrl" value="${mail.anyurl}/public" />
        <storeProperty name="recoverPasswordUrl" value="#{baseUrl}/recoverPassword.jsf" />
        
        <invoke url="${mail.anyurl}/image?webtest=1" />
        <invoke url="#{recoverPasswordUrl}" />
        
        <!-- User with manager roles -->
	  	<this.recoverPassword.user userId="${supplierUserId}"/>
	  	<this.recoverPassword.readConfirmMail uri="public/changePassword.jsf\?token=" hasManagerRole="true"/>
	  	<!-- change password and save -->
	  	<invoke url="#{recoverConfirmUrl}" />
	  	<this.recoverPassword.changePassword password1="secret" password2="secret"/>
	  	<mail.recoverPassword.readConfirmedMail />
	    
	    <!-- Bug#10154 -->
	    <this.replacechars value="#{recoverConfirmUrl}" />
	    <invoke url="#{wrongRecoverConfirmUrl}" />
	    <common.verifyError label="${error.recoverpassword.invalid.link}" errorFieldId="errorMessages"/>
	  	  	
	  	<!-- Pure customer -->
	  	<invoke url="#{recoverPasswordUrl}" />
	  	<this.recoverPassword.user userId="${customerUserId}"/>
	  	<this.recoverPassword.readConfirmMail uri="public/changePassword.jsf\?token=" hasManagerRole="false"/>
	  	
	  	<!-- Recover password twice in 5 minutes -->
	  	<mail.cleanInbox />
	  	<invoke url="#{recoverPasswordUrl}" />
	  	<this.recoverPassword.user userId="${supplierUserId}"/>
	  	<invoke url="#{recoverPasswordUrl}" />
	  	<this.recoverPassword.user userId="${supplierUserId}"/>
	  	<mail.recoverPassword.verifyMailCount expectedMailCount="1"/>
	    
	    <!--check of the login after password recovery -->
	    <invoke url="${supplierUrl}" />
	    <setInputField name="userId" value="${supplierUserId}" />
	    <setInputField name="password" value="secret" />
	    <clickButton label="${button.login}" />
      <verifyElementText htmlId="headerUserId" text="${supplierUserId}" />
      <login.logout />
	  	  
	  </webtest>
	  
	  <webtest name="test_passwordRecovery_finalCleanup">
        <scenario.cleanUpLeftServicesIfAny url="${supplierUrl}" uId="${supplierUserId}" />
      </webtest>
	</target>

  <macrodef name="this.recoverPassword.user">
	<attribute name="userId" />
	<sequential>
	   <setInputField htmlId="recoveryform:userId" value="@{userId}" />
	   <setInputField htmlId="recoveryform:verificationCode" value="pp09" />
	   <clickElement htmlId="recoveryform:continueButtonLink" />
	</sequential>
  </macrodef>

  <macrodef name="this.recoverPassword.changePassword">
    <attribute name="password1" />
    <attribute name="password2" />
    <sequential>
      <setInputField htmlId="passwordform:password" value="@{password1}" />
	  <setInputField htmlId="passwordform:password2" value="@{password2}" />
	  <clickElement htmlId="passwordform:changeButtonLink" />
    </sequential>
  </macrodef>

  <macrodef name="this.recoverPassword.readConfirmMail">
    <attribute name="uri" />
    <attribute name="hasManagerRole" />
    <sequential>
      <emailSetConfig server="${mail.server}" type="${mail.servertype}" password="${mail.password}" username="${mail.username}" delay="${mail.delay}" />
      <retry maxcount="1">
        <sleep seconds="1" />
        <ifStep test="@{hasManagerRole}">
       	  <then>
        	<emailStoreMessageId subject="${RECOVERPASSWORD_CONFIRM_URL.subject}" property="mId" />
        	<emailMessageContentFilter save="plain" messageId="#{mId}" />
       	 	<storeRegEx description="Extract confirm url from mail content" text="URL:\s(.*@{uri}\S*)" property="recoverConfirmUrl" group="1" />
        	<echo level="info" message="URL: #{recoverConfirmUrl}" />
          </then>
          <else>     
        	<emailStoreMessageId subject="${RECOVERPASSWORD_CLASSICPORTAL_FAILED.subject}" property="mId" />
        	<emailMessageContentFilter save="plain" messageId="#{mId}" />
        	<storeRegEx description="Extract confirm url from mail content1" text="\s(\S*)" property="mailContent" group="1" />
        	<echo level="info" message="MAIL: #{mailContent}" />
          </else>
        </ifStep>

        <emailDeleteMessage messageId="#{mId}" />
      </retry>
    </sequential>
  </macrodef>
  
  <macrodef name="this.replacechars">
    <attribute name="value" />
    <sequential>
       <common.replaceChars value="@{value}" from = "&amp;" to = "%" property="newVal" />
       <storeProperty name="wrongRecoverConfirmUrl" value="#{newVal}" propertyType="dynamic" />
       <echo message="value is !#{value}!" />
     </sequential>
  </macrodef>

</project>