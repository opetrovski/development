<!-- Copyright FUJITSU LIMITED 2017-->
<!DOCTYPE project SYSTEM "../../dtd/Project.dtd">
<project default="tests" xmlns:setup="antlib:org.oscm.webtest.setup">
  <import file="../../macros/marketplace/all.xml" />

  <target name="setup">
    <webtest name="testSubscriptionToUnit_setup">

      <!-- Create marketplace and add user to it -->
      <operator.addCurrency />
      <scenario.setupSupplier />
      <operator.createMarketplace mIdProperty="mId" name="Global Marketplace" />
      <landingpage.setSortOrderForLandingpageWithLogin mId="${mId}" />
      <operator.addSupplierToGlobalMarketplace supplierId="${supplierId}" marketplaceId="${mId}" />

      <!-- Activate 3 sample services as a supplier-->
      <login.loginAsSupplier url="${supplierUrl}" userId="${supplierUserId}" />
      <organization.managePayment rowNr="0" enabled="true" />
      <techservice.import file="${techService.import.file}" />
      <setup:service.define serviceId="ServiceA" name="ServiceA" description="Service A description" concurrentUser="3" namedUser="2" marketplaceId="${mId}" configurableChecked="true"/>
      <setup:pricemodel.define serviceId="ServiceA" isFree="true" />
      <setup:service.define serviceId="ServiceB" name="ServiceB" description="Service B description" concurrentUser="3" namedUser="2" marketplaceId="${mId}" configurableChecked="true"/>
      <setup:pricemodel.define serviceId="ServiceB" isFree="true" />
      <setup:service.define serviceId="ServiceC" name="ServiceC" description="Service C description" concurrentUser="3" namedUser="2" marketplaceId="${mId}" configurableChecked="true"/>
      <setup:pricemodel.define serviceId="ServiceC" isFree="true" />
      <login.logout />
      <setup:service.activate serviceIds="ServiceA" />
      <setup:service.activate serviceIds="ServiceB" />
      <setup:service.activate serviceIds="ServiceC" />

      <!-- Add sample units as supplier -->
      <mpl_login.user mid="${mId}" userId="${supplierUserId}" />
      <mpl_user.createGroup groupId="Group1" groupDescription="Group 1 description" hasService="true" />
      <mpl_user.createGroup groupId="Group2" groupDescription="Group 2 description" hasService="true" />
      <mpl_user.createGroup groupId="Group3" groupDescription="Group 3 description" hasService="true" />
      <mpl_user.createGroup groupId="TestUnit" groupDescription="Group 3 description" hasService="true" />
      <clickElement htmlId="tabGroups:header" />

      <!-- Subscribe sample services as a supplier -->
      <mpl_service.subscribe mid="${mId}" index="0" />
      <mpl_service.subscribe mid="${mId}" index="1" addToUnit="true" unit="0"/>
      <mpl_service.subscribe mid="${mId}" index="0" addToUnit="true" unit="1"/>
      <mpl_service.subscribe mid="${mId}" index="1" addToUnit="true" unit="2"/>
      <mpl_service.subscribe mid="${mId}" index="2" addToUnit="true" unit="3"/>

      <!-- End setup -->
      <mpl_login.logout />

    </webtest>
  </target>

  <target name="tests" depends="setup">
    <webtest name="testSubscriptionToUnit_testTableSortingAndFilteringByUnit">

      <!-- Login as supplier and go to account > subscriptions page -->
      <mpl_login.user mid="${mId}" userId="${supplierUserId}" />
      <mpl_goto.account.subscriptions />

      <!-- Apply sorting (ascending) on unit column and verify it -->
      <clickLink xpath="//*[@class='maincontents']//th[contains(text(), 'Unit')]/a" />
      <verifyXPath xpath="//*[@id='subListForm:subscriptionsList:tb']/tr[1]/td[4][contains(.,'default')]" />
      <verifyXPath xpath="//*[@id='subListForm:subscriptionsList:tb']/tr[2]/td[4][contains(.,'Group1')]" />
      <verifyXPath xpath="//*[@id='subListForm:subscriptionsList:tb']/tr[3]/td[4][contains(.,'Group2')]" />
      <verifyXPath xpath="//*[@id='subListForm:subscriptionsList:tb']/tr[4]/td[4][contains(.,'Group3')]" />
      <verifyXPath xpath="//*[@id='subListForm:subscriptionsList:tb']/tr[5]/td[4][contains(.,'')]" />

      <!-- Apply sorting (descending) on unit column and verify it -->
      <clickLink xpath="//*[@class='maincontents']//th[contains(text(), 'Unit')]/a" />
      <verifyXPath xpath="//*[@id='subListForm:subscriptionsList:tb']/tr[1]/td[4][contains(.,'')]" />
      <verifyXPath xpath="//*[@id='subListForm:subscriptionsList:tb']/tr[2]/td[4][contains(.,'Group3')]" />
      <verifyXPath xpath="//*[@id='subListForm:subscriptionsList:tb']/tr[3]/td[4][contains(.,'Group2')]" />
      <verifyXPath xpath="//*[@id='subListForm:subscriptionsList:tb']/tr[4]/td[4][contains(.,'Group1')]" />
      <verifyXPath xpath="//*[@id='subListForm:subscriptionsList:tb']/tr[5]/td[4][contains(.,'default')]" />

      <!-- Apply filtering on unit name (must match Group*) and verify it, sorting by unit is still active -->
      <setInputField htmlId="subListForm:subscriptionsList:unit" value="Group" />
      <common.waitForJavaScript />
      <verifyXPath xpath="//*[@id='subListForm:subscriptionsList:tb']/tr[1]/td[4][contains(.,'Group3')]" />
      <verifyXPath xpath="//*[@id='subListForm:subscriptionsList:tb']/tr[2]/td[4][contains(.,'Group2')]" />
      <verifyXPath xpath="//*[@id='subListForm:subscriptionsList:tb']/tr[3]/td[4][contains(.,'Group1')]" />

      <!-- Apply filtering on unit name (must match default*) and verify it, sorting by unit is still active -->
      <setInputField htmlId="subListForm:subscriptionsList:unit" value="default" />
      <common.waitForJavaScript />
      <verifyXPath xpath="//*[@id='subListForm:subscriptionsList:tb']/tr[1]/td[4][contains(.,'default')]" />

      <!-- End test -->
      <mpl_login.logout />

    </webtest>
    <webtest name="testSubscriptionToUnit_testUnitDeletion">

      <!-- Login as supplier and go to account > users & units page -->
      <mpl_login.user mid="${mId}" userId="${supplierUserId}" />
      <mpl_goto.account.users />
      <clickElement htmlId="tabGroups:header"/>

      <!-- User should not be able to remove unit, which is assigned to one of subscriptions -->
      <clickElement htmlId="groupsListForm:groupListTable:1:deleteBt"/>
      <common.waitForJavaScript />
      <clickElement htmlId="deleteGroupForm:deleteConfirmPlOkButton"/>
      <common.waitForJavaScript />
      <verifyXPath xpath="//*[@id='errorMessages:']//*[contains(text(), 'Group1') and contains(text(), 'cannot be deleted, because a subscription is assigned to it')]" />

      <!-- End test -->
      <mpl_login.logout />

    </webtest>
    <webtest name="testSubscriptionToUnit_testUnitAccessDuringSubCreation">

      <!-- Create a new user with role subscription manager and login -->
      <mpl_login.user mid="${mId}" userId="${supplierUserId}" />
      <mpl_goto.account.users />
      <mpl_user.create userId="SubMgr" isSubMgr="true" />
      <mpl_login.logout />
      <mail.readPasswordAndUrlFromMail />
      <storeProperty name="usernameM" value="#{userId}" propertyType="ant" />
      <mpl_login.loginWithChangePassword mid="${mId}" userId="${usernameM}" oldPassword="#{userPwd}" />

      <!-- User should not be able to set unit (button should be disabled) during creating new subscription -->
      <clickLink htmlId="showDetails0" />
      <common.waitForJavaScript />
      <clickLink htmlId="buyme" />
      <clickElement htmlId="getItForLoggedUser" />
      <verifyXPath xpath="//*[@id='configurationForm:selectOrgUnitBtnDisabled']" />

      <!-- End test -->
      <mpl_login.logout />

    </webtest>
    <webtest name="testSubscriptionToUnit_testUnitAccessDuringSubEdition">

      <!-- Login as subscription manager and go to account > subscriptions -->
      <mpl_login.user userId="${usernameM}" mid="${mId}" />
      <mpl_service.subscribe mid="${mId}" index="0" setCustomName="true" customName="ServiceX"/>
      <mpl_goto.account.subscriptions />

      <!-- Check if pencil next to organizational unit text field is not available for subscription manager -->
      <clickLink xpath="//*[@class='maincontents']//th[contains(text(), 'Unit')]/a" />
      <clickLink xpath="//*[@id='subListForm:subscriptionsList:tb']/tr[1]/td[1]//a" />
      <clickElement htmlId="tabConfiguration:header" />
      <common.waitForJavaScript />
      <verifyXPath xpath="//*[@id='configurationForm:basicInfo']/tbody/tr[.//*[contains (text(), 'Organizational unit')]]/td[1]/table/tbody/tr/td[position() = 2 and not(node())]" />

      <!-- End test -->
      <mpl_login.logout />

    </webtest>

    <!-- Check if default user group is selected for unit administrator in subscribing process -->
    <webtest name="testSubscriptionToUnit_testLoginAsUnitAdministrator">
      <!-- Create a new user -->
      <mpl_login.user mid="${mId}" userId="${supplierUserId}" />
      <mpl_goto.account.users />
      <mpl_user.create userId="UserWithGroup" />
      <mpl_user.display userId="#{userId}" />
      <mpl_user.selectUserGroup groupIndex="0" groupRole="Administrator" />
      <clickButton label="${button.save}" />
      <mpl_login.logout />
      <mail.readPasswordAndUrlFromMail/>
      <storeProperty name="unitAdminName" value="#{userId}" propertyType="ant" />
      <mpl_login.loginWithChangePassword mid="${mId}" userId="#{userId}" oldPassword="#{userPwd}" />

      <clickLink htmlId="showDetails0" />
      <common.waitForJavaScript />

      <!-- Click "Buy me" -->
      <clickLink htmlId="buyme"/>
      <clickElement htmlId="getItForLoggedUser"/>
      <verifyXPath xpath="//*[@id='configurationForm:unitNameDisplay' and text()] " />

      <!-- Check if unit administrator is not able to leave user group empty -->
      <clickElement htmlId="configurationForm:selectOrgUnitBtn"/>
      <verifyXPath xpath="//*[@id='organizationUnitPanelForm:selectOneRadio:0' and @disabled='disabled']" />
    </webtest>

    <webtest name="testSubscriptionToUnit_testLoginAsUnitAdministrator2">
      <!-- Login as unit administrator and subscribe to service -->
      <mpl_login.user userId="${unitAdminName}" mid="${mId}" />
      <mpl_service.subscribe mid="${mId}" index="0" setCustomName="true" customName="ServiceX1"/>
      <clickElement htmlId="tabConfiguration:header" />

      <!-- Check if unit administrator is set as subscription owner -->
      <verifyXPath xpath="//*[@id='configurationForm:selectedOwnerText']/span[contains (text(), '${unitAdminName}')]" />

      <!-- Check if unit is selected -->
      <verifyXPath xpath="//*[@id='configurationForm:selectedUnitName']/span[text()]" />
      <clickElement xpath="//*[contains(@id, 'editUnit')]"/>

      <!-- Check if unit administrator is not able to leave user group empty -->
      <verifyXPath xpath="//*[@id='organizationUnitPanelForm:selectOneRadio:0' and @disabled='disabled']" />

      <clickElement htmlId="organizationUnitPanelForm:organizationUnitPanelokButtonLink" />
      <clickElement htmlId="configurationForm:saveConfigurationButtonLink"/>
      <mpl_verify.success label="ServiceX1" />
      <mpl_login.logout />

    </webtest>

    <webtest name="testSubscriptionToUnit_checkRadioButtons">
      <!-- Login as unit administrator and subscribe to service -->
      <mpl_login.user userId="${supplierUserId}" mid="${mId}" />
      <mpl_service.subscribe mid="${mId}" index="0" setCustomName="true" customName="ServiceRadioX1"/>
      <clickElement htmlId="tabConfiguration:header" />

      <!-- Check if unit administrator is set as subscription owner -->
      <verifyXPath xpath="//*[@id='configurationForm:selectedOwnerText']/span[contains (text(), '${supplierUserId}')]" />

      <!-- Edit unit -->
      <verifyXPath xpath="//*[@id='configurationForm:selectedUnitName']/span[text()]" />
      <clickElement xpath="//*[contains(@id, 'editUnit')]"/>

      <!-- Select unit -->
      <setRadioButton xpath="//*[@id='organizationUnitPanelForm:groupListTable:1:selectOneRadio:0']" />

      <!-- Insert value in filter -->
      <setInputField htmlId="organizationUnitPanelForm:groupListTable:filterGroupName" value="something" />
      <common.waitForJavaScript />

      <!-- Remove filter value -->
      <setInputField htmlId="organizationUnitPanelForm:groupListTable:filterGroupName" value="" />
      <common.waitForJavaScript />

      <!-- Save and check if unit is selected -->
      <clickElement htmlId="organizationUnitPanelForm:organizationUnitPanelokButtonLink" />
      <verifyXPath xpath="//*[@id='configurationForm:selectedUnitName']/span[@title='Group1']" />

      <!-- Edit subscription owner -->
      <clickElement xpath="//*[contains(@id, 'configurationForm:assignSubOwner')]"/>
      <setRadioButton xpath="//*[@id='selectOwnerPanelForm:selectOneRadio:0']" />
      <clickElement htmlId="selectOwnerPanelForm:saveButton" />

      <!-- Select owner -->
      <clickElement xpath="//*[contains(@id, 'configurationForm:assignSubOwner')]"/>
      <setRadioButton xpath="//*[@id='selectOwnerPanelForm:userTable:0:selectOneRadio:0']" />

      <!-- Insert value in filter -->
      <setInputField htmlId="selectOwnerPanelForm:userTable:filterUserId" value="something" />
      <common.waitForJavaScript />

      <!-- Remove filter value -->
      <setInputField htmlId="selectOwnerPanelForm:userTable:filterUserId" value="" />
      <common.waitForJavaScript />

      <!-- Save and check if owner is selected -->
      <clickElement htmlId="selectOwnerPanelForm:saveButton" />
      <not>
        <verifyXPath xpath="//*[@id='configurationForm:selectedOwnerText']/span[@title='This subscription does not have a dedicated owner']" />
      </not>
      <mpl_login.logout />
    </webtest>

    <webtest name="testSubscriptionToUnit_testNavigationMenu">

      <!-- Login as unit administrator go to account main page -->
      <mpl_login.user userId="${unitAdminName}" mid="${mId}" />
      <mpl_goto.account />

      <!-- Verify menu entries -->
      <verifyXPath xpath="//div[@class='innerblock']//a[normalize-space()='${marketplace.account.subscriptions.title}']" />
      <verifyXPath xpath="//div[@class='innerblock']//a[normalize-space()='${marketplace.account.profile.title}']" />
      <verifyXPath xpath="//div[@class='innerblock']//a[normalize-space()='${marketplace.account.processes.title}']" />
      <verifyXPath xpath="//div[@class='innerblock']//a[normalize-space()='${marketplace.account.units.title}']" />
      <verifyXPath xpath="//div[@class='innerblock']//a[normalize-space()='${marketplace.account.operations.title}']" />
      <not>
        <verifyXPath xpath="//div[@class='innerblock']//a[normalize-space()='${marketplace.account.users.title}']" />
        <verifyXPath xpath="//div[@class='innerblock']//a[normalize-space()='${marketplace.account.payments.title}']" />
      </not>
      <mpl_login.logout />

    </webtest>

    <webtest name="testSubscriptionToUnit_testUnitEdit">

      <!-- Login as unit administrator go to account main page -->
      <mpl_login.user userId="${unitAdminName}" mid="${mId}" />
      <mpl_goto.account.units/>

      <!-- Go to unit edit page and check if name and reference ID fields are disabled -->
      <clickElement xpath="//*[@id='groupsListForm:groupListTable:0:colEditGroup']/a"/>
      <verifyXPath xpath="//input[@id='editGroupForm:groupId' and @disabled='disabled']" />
      <verifyXPath xpath="//input[@id='editGroupForm:groupReferenceId' and @disabled='disabled']" />
      <mpl_login.logout />

    </webtest>

    <webtest name="testSubscriptionToUnit_SubscriptionOwnerRemoval">
      <!-- Login as org admin and create a new user -->
      <mpl_login.user mid="${mId}" userId="${supplierUserId}" />
      <mpl_goto.account.users />
      <mpl_user.create userId="UnitAdmin2" />
      <mpl_user.display userId="#{userId}" />
      <mpl_user.selectUserGroup groupIndex="3" groupRole="Administrator" />
      <clickButton label="${button.save}" />
      <mpl_login.logout />
      <mail.readPasswordAndUrlFromMail/>
      <storeProperty name="unitAdminName2" value="#{userId}" propertyType="ant" />
      <mpl_login.loginWithChangePassword mid="${mId}" userId="#{userId}" oldPassword="#{userPwd}" />

      <!-- Subscribe to service -->
      <mpl_service.subscribe mid="${mId}" index="0" setCustomName="true" customName="ServiceX3"/>
      <clickElement htmlId="tabConfiguration:header" />

      <!-- Check owner -->
      <verifyXPath xpath="//*[@id='configurationForm:selectedOwnerText']/span[contains (text(), '${unitAdminName2}')]" />

      <!-- Click Ok -->
      <mpl_login.logout/>

      <!-- Login as admin -->
      <mpl_login.user mid="${mId}" userId="${supplierUserId}" />

      <!-- Edit unit and deassign user -->
      <mpl_goto.account.users/>
      <clickElement htmlId="tabGroups:header"/>
      <clickElement xpath="//tbody[@id='groupsListForm:groupListTable:tb']//span[contains (text(), 'TestUnit')]//..//..//..//a"/>

      <!-- deassign user -->
      <verifyCheckbox xpath="//*[@id='editGroupForm:usersInGroup']//*[contains(@id,'${unitAdminName2}')]/input" checked="true" />
      <setCheckbox xpath="//*[@id='editGroupForm:usersInGroup']//*[contains(@id,'${unitAdminName2}')]/input" checked="false" />
      <clickElement htmlId="editGroupForm:createButtonLink"/>

      <!-- Check if admin is still owner -->
      <mpl_goto.account.subscriptions/>

      <clickElement xpath="//img[contains(@id, 'ServiceX3')]"/>

      <clickElement htmlId="tabConfiguration:header" />

      <!-- Check if unit administrator is set as subscription owner -->
      <verifyXPath xpath="//*[@id='configurationForm:selectedOwnerText']/span[not (contains (text(), '${unitAdminName2}'))]" />
      <mpl_login.logout/>

    </webtest>

    <webtest name="testSubscriptionToUnit_testUnitAdminSubscriptionOwnerEdit">
      <!-- Login as supplier and create temp org admin -->
      <mpl_login.user mid="${mId}" userId="${supplierUserId}" />
      <mpl_goto.account.users />
      <mpl_user.create userId="UnitAdmin" />
      <mpl_user.display userId="#{userId}" />
      <setCheckbox xpath="//*[@id='editUserForm:userRolesTable:tb']//*[contains (text(), 'Administrator')]//..//input" checked="true"/>
      <clickButton label="${button.save}" />
      <mpl_login.logout />

      <mail.readPasswordAndUrlFromMail/>
      <storeProperty name="unitAdminName3" value="#{userId}" propertyType="ant" />

      <!-- Login as supplier unit admin -->
      <mpl_login.loginWithChangePassword mid="${mId}" userId="#{userId}" oldPassword="#{userPwd}" />
      <mpl_service.subscribe mid="${mId}" index="0" setCustomName="true" customName="ServiceX4"/>

      <mpl_login.logout/>

      <!-- Login as supplier -->
      <mpl_login.user mid="${mId}" userId="${supplierUserId}" />

      <!-- Set supplier unit admin as unit admin only-->
      <mpl_goto.account.users/>
      <mpl_user.display userId="${unitAdminName3}"/>

      <mpl_user.selectUserGroup groupIndex="0" groupRole="Administrator"/>
      <setCheckbox xpath="//*[@id='editUserForm:userRolesTable:tb']//*[contains (text(), 'Administrator')]//..//input" checked="false"/>

      <clickButton label="${button.save}" />

      <mpl_login.logout/>

      <!-- Login as unit administrator and subscribe to service -->
      <mpl_login.user userId="${unitAdminName3}" mid="${mId}" />
      <mpl_goto.account.subscriptions/>
      <clickElement xpath="//img[contains(@id, 'ServiceX4')]"/>
      <clickElement htmlId="tabConfiguration:header" />

      <!-- Check if unit administrator is set as subscription owner -->
      <verifyXPath xpath="//*[@id='configurationForm:selectedOwnerText']/span[contains (text(), '${unitAdminName3}')]" />

      <!-- Check if unit is not assigned -->
      <verifyXPath xpath="//*[@id='configurationForm:selectedUnitName']/span[contains (text(), 'not assigned')]" />
      
      <!-- Save and check if succeeded and no unit assigned -->
      <clickElement htmlId="configurationForm:saveConfigurationButtonLink"/>
      <mpl_verify.success label="ServiceX4" />
      <verifyXPath xpath="//*[@id='configurationForm:selectedUnitName']/span[contains (text(), 'not assigned')]" />

      <mpl_login.logout />
    </webtest>

    <webtest name="testSubscriptionToUnit_testUnitRoleSelectionBehavior">
      <!-- Login as supplier -->
      <mpl_login.user mid="${mId}" userId="${supplierUserId}" />

      <mpl_goto.account.users/>
      <mpl_user.display userId="${supplierUserId}"/>

      <!-- Uncheck the checkbox -->
      <setCheckbox xpath="//*[@id='editUserForm:userGroupsTable:0:groupsCheckbox']" checked="false"/>

      <!-- Check visibility - should be hidden -->
      <verifyXPath xpath="//*[@id='editUserForm:userGroupsTable:0:unitRole' and contains (@style, 'visibility: hidden')]" />

      <!-- Check the checkbox -->
      <setCheckbox xpath="//*[@id='editUserForm:userGroupsTable:0:groupsCheckbox']" checked="true"/>

      <!-- Check visibility - should be visible -->
      <verifyXPath xpath="//*[@id='editUserForm:userGroupsTable:0:unitRole' and contains (@style, 'visibility: visible')]" />

      <mpl_login.logout />
    </webtest>

    <webtest name="testSubscriptionToUnit_testAssignUserToUnit_bug12495">
      <!-- Login as supplier -->
      <mpl_login.user mid="${mId}" userId="${supplierUserId}" />
      <mpl_goto.account.users />
      <!-- Create Subscription Manager -->
      <mpl_user.create userId="SubscriptionMan" isSubMgr="true" />
      <property name="user_id" value="#{userId}" />
      <login.logout />
      <!-- Login as Subscription Manager and subscribe to the service -->
      <mail.readPasswordAndUrlFromMail />
      <property name="user_pwd" value="#{userPwd}" />
      <storeProperty name="u4Key" value="#{userKey}" propertyType="ant" />
      <mpl_login.loginWithChangePassword userId="${user_id}" oldPassword="${user_pwd}" mid="${mId}" />
      <mpl_service.subscribe mid="${mId}" index="0" setCustomName="true" customName="SubManSubscription"/>
      <!-- Go to the subscriptions table and check if he can see his subscription -->
      <mpl_goto.account.subscriptions/>
      <verifyXPath xpath="//tr[@id='subListForm:subscriptionsList:0']/td/div/span[text()='SubManSubscription']"/>
      <login.logout />
      <!-- Login as supplier -->
      <mpl_login.user mid="${mId}" userId="${supplierUserId}" />
      <!-- Create unit with all services selected -->
      <mpl_user.createGroup groupId="GroupForSubManCheck" groupDescription="Group For Sub Man description" hasService="true" />
      <mpl_goto.account.users />
      <!-- Assign Subscription Manager to the newly created unit -->
      <clickElement xpath="//*[@id='tabGroups:header']" />
      <clickElement xpath="//table[@id='groupsListForm:groupListTable']/tbody/tr/td/div/span[text()='GroupForSubManCheck']/../../../td/a" />
      <setCheckbox xpath="//input[contains(@id, 'editGroupForm:usersInGroup:SubscriptionMan')]" checked="true"/>
      <clickElement htmlId="editGroupForm:createButtonLink" />
      <login.logout />
      <!-- Login as Subscription manager and check if he still can see his subscription -->
      <mpl_login.user mid="${mId}" userId="${user_id}" />
      <mpl_goto.account.subscriptions/>
      <verifyXPath xpath="//tr[@id='subListForm:subscriptionsList:0']/td/div/span[text()='SubManSubscription']"/>
      <login.logout />
    </webtest>

  </target>
</project>