<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright FUJITSU LIMITED 2017-->

<project name="APP VMWare controller database tasks" default="setupDatabase" basedir=".">

	<description>
	</description>

	<!-- properties -->
	<property environment="env" />
	<property name="work.dir" value="${basedir}" />
	<property name="dbproperties.file" location="${work.dir}/db.properties" />
	<property name="csv.dir" location="${work.dir}/csv" />
	<property name="sqlscripts.dir" location="${work.dir}/sql" />
	<property file="${dbproperties.file}" />
	<property name="database.interpreter" value="${env.DB_INTERPRETER}" />
	<property name="db.admin.user" value="postgres" />
	<property name="db.admin.pwd" value="${db.admin.pwd}" />
	<property name="db.schema" value="${db.user}" />

	<!-- path -->
	<path id="client.path">
		<fileset dir="${work.dir}/lib">
			<include name="**/*.jar" />
		</fileset>
	</path>


	<!-- user macros -->
	<macrodef name="create.user">
		<attribute name="failonerror" default="${db.jms.user.FOE}" />
		<attribute name="dbuser" />
		<attribute name="dbuserpwd" />
		<sequential>
			<echo message="Creating user @{dbuser} " />
			<runDbScript failonerror="@{failonerror}">
  			\set ON_ERROR_STOP
  			CREATE ROLE @{dbuser} LOGIN PASSWORD '@{dbuserpwd}';
      </runDbScript>
		</sequential>
	</macrodef>

	<macrodef name="delete.user">
		<attribute name="failonerror" default="true" />
		<attribute name="dbuser" />
		<sequential>
			<echo message="Removing user @{dbuser} " />
			<runDbScript failonerror="false">
   			\set ON_ERROR_STOP
   			DROP ROLE @{dbuser};
       </runDbScript>
		</sequential>
	</macrodef>


	<!-- database macros -->
	<macrodef name="runDbScript">
		<attribute name="failonerror" default="true" />
		<attribute name="dbadminuser" default="${db.admin.user}" />
		<attribute name="dbadminpwd" default="${db.admin.pwd}" />
		<text name="script" />
		<sequential>
			<property name="database.interpreter" value="${db.interpreter}" />
			<tempfile property="temp.script.file" destdir="${work.dir}" prefix="scriptdb" suffix=".sql" deleteonexit="true" />
			<echo file="${temp.script.file}" append="false">
				@{script}
			</echo>
			<exec executable="${database.interpreter}" failonerror="@{failonerror}">
				<env key="PGPASSWORD" value="@{dbadminpwd}" />
				<arg value="-U" />
				<arg value="@{dbadminuser}" />
				<arg value="-f" />
				<arg value="${temp.script.file}" />
				<arg value="-p" />
				<arg value="${db.port}" />
			</exec>
			<delete file="${temp.script.file}" failonerror="false" quiet="true" />
		</sequential>
	</macrodef>

	<macrodef name="create.db">
		<attribute name="dbname" />
		<attribute name="dbuser" />
		<attribute name="dbschema" />
		<attribute name="failonerror" default="true" />
		<sequential>
			<echo message="Creating database @{dbname} " />
			<runDbScript failonerror="@{failonerror}">
  			\set ON_ERROR_STOP
  			CREATE DATABASE @{dbname} WITH OWNER=@{dbuser} TEMPLATE=template0 ENCODING='UTF8';
  			\c @{dbname}
  			CREATE SCHEMA @{dbschema};
  			GRANT ALL PRIVILEGES ON SCHEMA @{dbschema} TO @{dbuser};
      </runDbScript>
		</sequential>
	</macrodef>

	<macrodef name="delete.db">
		<attribute name="failonerror" default="true" />
		<attribute name="dbname" />
		<sequential>
			<echo message="Removing database @{dbname} " />
			<runDbScript failonerror="@{failonerror}">
   			\set ON_ERROR_STOP
   			DROP DATABASE @{dbname};
       </runDbScript>
		</sequential>
	</macrodef>

	<macrodef name="delete.forced.db">
		<attribute name="failonerror" default="true" />
		<attribute name="dbname" />
		<sequential>
			<echo message="Removing database @{dbname} " />
			<runDbScript failonerror="@{failonerror}">
  			\set ON_ERROR_STOP
            update pg_database set datallowconn = 'false' where datname = '@{dbname}';
            SELECT pg_terminate_backend(procpid) FROM pg_stat_activity WHERE datname = '@{dbname}';
  			DROP DATABASE @{dbname};
      </runDbScript>
		</sequential>
	</macrodef>


	<!-- user targets -->
	<target name="createUser">
		<create.user dbuser="${db.user}" dbuserpwd="${db.pwd}" />
	</target>

	<target name="dropUser">
		<delete.user dbuser="${db.user}" failonerror="false" />
	</target>


	<!-- database targets -->
	<target name="createDatabase">
		<create.db dbname="${db.name}" dbuser="${db.user}" dbschema="${db.schema}" />
	</target>

	<target name="dropDatabase">
		<delete.db dbname="${db.name}" failonerror="false" />
	</target>

	<target name="dropDatabaseForced">
		<delete.forced.db dbname="${db.name}" failonerror="false" />
	</target>

	<target name="importVCenter">
		<java classname="org.oscm.app.vmware.db.importer.VCenterImport" failonerror="true">
			<arg value="${db.driver.class}" />
			<arg value="${db.url}" />
			<arg value="${db.user}" />
			<arg value="${db.pwd}" />
			<arg value="${csv.dir}/vcenter.csv" />
			<classpath refid="client.path" />
		</java>
	</target>

	<target name="importDatacenter">
		<java classname="org.oscm.app.vmware.db.importer.DatacenterImport" failonerror="true">
			<arg value="${db.driver.class}" />
			<arg value="${db.url}" />
			<arg value="${db.user}" />
			<arg value="${db.pwd}" />
			<arg value="${csv.dir}/datacenter.csv" />
			<classpath refid="client.path" />
		</java>
	</target>

	<target name="importCluster">
		<java classname="org.oscm.app.vmware.db.importer.ClusterImport" failonerror="true">
			<arg value="${db.driver.class}" />
			<arg value="${db.url}" />
			<arg value="${db.user}" />
			<arg value="${db.pwd}" />
			<arg value="${csv.dir}/cluster.csv" />
			<classpath refid="client.path" />
		</java>
	</target>

	<target name="importVLAN">
		<java classname="org.oscm.app.vmware.db.importer.VLANImport" failonerror="true">
			<arg value="${db.driver.class}" />
			<arg value="${db.url}" />
			<arg value="${db.user}" />
			<arg value="${db.pwd}" />
			<arg value="${csv.dir}/vlan.csv" />
			<classpath refid="client.path" />
		</java>
	</target>

	<target name="importIPPool">
		<java classname="org.oscm.app.vmware.db.importer.IPPoolImport" failonerror="true">
			<arg value="${db.driver.class}" />
			<arg value="${db.url}" />
			<arg value="${db.user}" />
			<arg value="${db.pwd}" />
			<arg value="${csv.dir}/ippool.csv" />
			<classpath refid="client.path" />
		</java>
	</target>

	<target name="updateSchema">
		<echo message="Applying SQL scripts from ${sqlscripts.dir} " level="debug" />	
		<java classname="org.oscm.setup.DatabaseUpgradeHandler" failonerror="true">
			<arg value="${dbproperties.file}" />
			<arg value="${sqlscripts.dir}" />
			<arg value="db.pwd=${db.pwd}" />
			<sysproperty key="javax.xml.parsers.SAXParserFactory" value="com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl" />
			<sysproperty key="javax.xml.parsers.DocumentBuilderFactory" value="com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl" />
			<sysproperty key="javax.xml.transform.TransformerFactory" value="com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl" />
			<classpath path="${java.home}/lib/rt.jar" />
			<classpath refid="client.path" />
		</java>
	</target>


	<target name="setupDatabase" depends="createUser,createDatabase,updateSchema" />
	<target name="dropAll" depends="dropDatabase,dropUser" />
	<target name="importAll" depends="importVCenter,importDatacenter,importCluster,importVLAN,importIPPool" />

</project>
