<!-- Copyright FUJITSU LIMITED 2017-->
<project name="Setup Integration Test Environment" default="appSetupAndDeploy">

  <!-- Find hostname on Linux and Windows -->
  <property environment="env" />
  <property name="env.HOSTNAME" value="${env.COMPUTERNAME}" />

  <!-- Load Properties -->
  <property name="devruntime.local" value="${basedir}/../../oscm-devruntime/javares/local/${env.HOSTNAME}" />
  <property name="file.local.properties" location="${devruntime.local}/integration.properties" />
  <property name="dbproperties.file" location="${devruntime.local}/db-app.properties" />
  <property name="workspace.dir" location="../../"/>
  <loadproperties srcFile="${devruntime.local}/configsettings_app_ror.properties"/>
  
  <echo level="info" message="Loading local properties from ${file.local.properties}" />
  <property file="${file.local.properties}" />

  <echo level="info" message="Loading local db properties from ${dbproperties.file}" />
  <property file="${dbproperties.file}" />

  <property name="dir.build.src" location="${basedir}/../../" />
  <property name="build.result.package.dir" value="${dir.build.src}/oscm-build/result/package" />

  <!-- domain dirs -->
  <property name="dir.glassfish.app.domain" location="${glassfish.home}/glassfish/domains/${glassfish.app.domain.name}" />
  <property name="dir.glassfish.bes.domain" location="${glassfish.home}/glassfish/domains/${glassfish.bes.domain.name}" />

  <!-- working dirs -->
  <property name="dir.workapp" location="./workapp" />
  <property name="dir.workapp.setup" location="${dir.workapp}/oscm-app-setup" />
  <property name="dir.workapp.setup.install" location="${dir.workapp.setup}/install" />
  <property name="dir.import" location="./import" />
  <property name="dir.workapp.certs" location="${dir.workapp}/certs" />

  <!-- setup script -->
  <property name="setup.script" value="${dir.workapp.setup.install}/build-glassfish.xml" />
  <property name="db.script" value="${dir.workapp.setup.install}/build-db.xml" />
  <property name="working.dir" value="${dir.workapp.setup}" />
  <property name="app.domain.path" value="${dir.workapp.setup}/app-domain" />

  <import file="${basedir}/macrodefs_integration.xml" />
  <import file="${dir.workapp.setup.install}/macrodefs-glassfish.xml" />

  <glassfishProperties filepath="${app.domain.path}"/>
  <taskdef file="${workspace.dir}/oscm-build-antextensions/javares/org/oscm/build/ant/tasks.xml">
    <classpath>
      <fileset dir="${dir.build.src}/oscm-build/javalib" includes="*.jar" />
      <fileset dir="${dir.build.src}/libraries/bouncycastle/javalib" includes="*.jar" />
    </classpath>
  </taskdef>

  <target name="domainExists">
    <available file="${dir.glassfish.app.domain}/config/domain.xml" property="app.domain.exists" />
  </target>

  <target name="initDB">
    <ant antfile="${db.script}" target="DROP.dbsAndUsers">
      <property name="database.interpreter" value="${dbinterpreter}" />
      <property name="basedir" value="${dir.workapp.setup.install}" />
    </ant>
    <ant antfile="${db.script}" target="initDB">
      <property name="database.interpreter" value="${dbinterpreter}" />
      <property name="basedir" value="${dir.workapp.setup.install}" />
    </ant>
  </target>

  <target name="appSetupAndDeploy">
    <antcall target="appSetup" />
    <antcall target="enableDebugMode"/>
  </target>

  <target name="stopAndDeleteAPPDomain">
    <glassfishProperties filepath="${app.domain.path}" />
    <stopDomain domain="${glassfish.app.domain.name}" failonerror="false" />
    <deleteDomain domain="${glassfish.app.domain.name}" failonerror="false" />
  </target>


  <target name="appSetup">
    <ant antfile="${setup.script}" target="SETUP">
      <property name="basedir" value="${dir.workapp.setup.install}" />
    </ant>
  </target>

  <target name="setupAPPWithController">
    <ant antfile="${setup.script}" target="SETUP">
      <property name="basedir" value="${dir.workapp.setup.install}" />
    </ant>
    <antcall target="_deleteCerts" />
    <antcall target="_exchangeAndImportCerts" />
  </target>

  <!--restarts APP and BES -->
  <target name="restartDomains" depends="restartBes,restartAPP" />

  <target name="restartBes">
    <stopDomain domain="${glassfish.bes.domain.name}" failonerror="false" />
    <startDomain domain="${glassfish.bes.domain.name}" port="${glassfish.bes.domain.admin.port}" />
  </target>

  <target name="restartAPP">
    <stopDomain domain="${glassfish.app.domain.name}" failonerror="true" />
    <startDomain domain="${glassfish.app.domain.name}" port="${glassfish.app.domain.admin.port}" />
  </target>

  <target name="appSetupDeployController" description="creates APP, deploys Controller and exchanges certificates">
    <antcall target="stopAndDeleteAPPDomain" />
    <antcall target="initDB" />
    <antcall target="setupAPPWithController" />
    <antcall target="enableDebugMode"/>
  </target>

  <target name="enableDebugMode">
    <asadmin.domain command="set">
      <arg value="server.java-config.debug-enabled=true" />
      <arg
        value="server.java-config.debug-options=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=${glassfish.app.DEBUG_PORT}" />
    </asadmin.domain>
    <antcall target="restartAPP" />
  </target>

  <target name="_exchangeAndImportCerts">
    <exportCert keystore="${dir.glassfish.bes.domain}/config/keystore.jks" alias="bes" filePath="${working.dir}/bes.crt" />
    <exportCert keystore="${dir.glassfish.app.domain}/config/keystore.jks" alias="app" filePath="${working.dir}/app.crt" />
    <importCert keystore="${dir.glassfish.bes.domain}/config/cacerts.jks" alias="app" filePath="${working.dir}/app.crt"
      failonerror="false" />
    <importCert keystore="${dir.glassfish.app.domain}/config/cacerts.jks" alias="bes" filePath="${working.dir}/bes.crt"
      failonerror="false" />
    <importCert keystore="${dir.glassfish.app.domain}/config/cacerts.jks" alias="${CONTROLLER_ID}" filePath="config/ror-demo.crt" failonerror="false"/>
  </target>

  <target name="_deleteCerts">
    <deleteCert keystore="${dir.glassfish.bes.domain}/config/cacerts.jks" alias="app" />
    <deleteCert keystore="${dir.glassfish.app.domain}/config/cacerts.jks" alias="bes" />
  </target>

</project>
