<!-- Copyright FUJITSU LIMITED 2017-->
<project name="Setup Integration Test Environment - STANDALONE" basedir="." default="STANDALONE.setup">

  <property environment="env" />
  <property name="env.HOSTNAME" value="${env.COMPUTERNAME}" />
  <property name="root.dir" value="${basedir}/../.." />
  <property name="devruntime.local" value="${root.dir}/oscm-devruntime/javares/local/${env.HOSTNAME}" />
  <property name="local.properties.file" location="${devruntime.local}/integration.properties" />
  <echo level="info">Loading local properties from ${local.properties.file}</echo>
  <property file="${local.properties.file}" />
  <property name="dbproperties.file" location="${devruntime.local}/db.properties" />
  <echo level="info">Loading local db properties from ${dbproperties.file}</echo>
  <property file="${dbproperties.file}" />
  <property name="build.src.dir" location="${root.dir}" />
  <property name="work.dir" location="./work" />
  <property name="work.setup.dir" location="${work.dir}/oscm-install-pack" />
  <property name="work.bss.setup.domains.dir" location="${work.setup.dir}/domains" />
  <property name="work.bss.setup.db.dir" location="${work.setup.dir}/databases" />
  <property name="work.bss.setup.db.bes.dir" location="${work.bss.setup.db.dir}/bes_db" />
  <property name="user" value="admin" />
  <property name="pwd" value="adminadmin" />
  <property name="masterpwd" value="changeit" />
  <property name="glassfish.bes.domain.dir" value="${glassfish.home}/glassfish/domains/${glassfish.bes.domain.name}" />

  <property name="bes.domain.path" value="${work.bss.setup.domains.dir}/bes_domain" />
  <property name="master.domain.path" value="${work.bss.setup.domains.dir}/indexer_domain" />

  <target name="prepareInstallPack">
    <delete dir="${work.dir}" />
    <unzip src="${build.src.dir}/oscm-build/result/package/oscm-install-pack/oscm-install-pack.zip" dest="${work.setup.dir}" />
  </target>

  <target name="STANDALONE.changeProperties">
    <antcall target="changePropertiesForBes" />
    <antcall target="changePropertiesForIndexer" />
    <copy file="${devruntime.local}/db.properties" todir="${work.bss.setup.db.bes.dir}" overwrite="true" />
    <copy file="${devruntime.local}/configsettings_standalone.properties" tofile="${work.bss.setup.db.bes.dir}/configsettings.properties" overwrite="true" />
    <propertyfile file="${bes.domain.path}/glassfishJMSBroker.properties" comment="cluster broker url file">
      <entry key="imq.persist.jdbc.postgresql.opendburl" value="${imq.persist.jdbc.postgresql.opendburl}" />
    </propertyfile>
    <propertyfile file="${master.domain.path}/glassfishJMSBroker.properties" comment="cluster broker url file">
      <entry key="imq.persist.jdbc.postgresql.opendburl" value="${imq.persist.jdbc.postgresql.opendburl}" />
    </propertyfile>
  </target>

  <target name="changePropertiesForBes">
    <propertyfile file="${bes.domain.path}/glassfish.properties" comment="glassfish properties">
      <entry key="GLASSFISH_HOME" value="${glassfish.home}" />
      <entry key="glassfish.domain.portadmin" value="${glassfish.bes.domain.admin.port}" />
      <entry key="glassfish.domain.portbase" value="${glassfish.bes.domain.portbase}" />
      <entry key="glassfish.domain.name" value="${glassfish.bes.domain.name}" />
      <entry key="glassfish.domain.admin.user" value="${user}" />
      <entry key="glassfish.domain.admin.pwd" value="${pwd}" />
      <entry key="glassfish.domain.remote.jms.host" value="${glassfish.master.domain.host}" />
      <entry key="glassfish.domain.remote.jms.port" value="${glassfish.master.domain.jms.port}" />
      <entry key="glassfish.domain.admin.master.pwd" value="${masterpwd}" />

      <entry key="glassfish.WS_PORT" value="${glassfish.bes.WS_PORT}" />
      <entry key="hibernate.search.default.refresh" value="${glassfish.bes.HIBERNATE_SLAVE_REFRESH_SEC}" />
      <entry key="hibernate.search.shared.sourceBase" value="${master.slave.shared.hibernate.search.sourceBase}" />
      <entry key="glassfish.bes.DEBUG_PORT" value="${glassfish.bes.DEBUG_PORT}" />

      <entry key="glassfish.domain.start.maxWaitSeconds" value="${glassfish.domain.start.maxWaitSeconds}" />
      <entry key="glassfish.domain.stop.waitSeconds" value="${glassfish.domain.stop.waitSeconds}" />

      <entry key="MAIL_HOST" value="${mail.host}" />
      <entry key="MAIL_RESPONSE_ADDRESS" value="${mail.response.address}" />
      <entry key="MAIL_PORT" value="${mail.port}" />
      <entry key="MAIL_USE_AUTHENTICATION" value="${mail.use.authentication}" />
      <entry key="MAIL_USER" value="${mail.user}" />
      <entry key="MAIL_PWD" value="${mail.password}" />
      <entry key="MAIL_TIMEOUT" value="${mail.timeout}" />
      <entry key="MAIL_CONNECTIONTIMEOUT" value="${mail.connectiontimeout}" />
    </propertyfile>
  </target>

  <target name="changePropertiesForIndexer">
    <propertyfile file="${master.domain.path}/glassfish.properties" comment="glassfish properties">
      <entry key="GLASSFISH_HOME" value="${glassfish.home}" />
      <entry key="glassfish.domain.portadmin" value="${glassfish.master.domain.admin.port}" />
      <entry key="glassfish.domain.portbase" value="${glassfish.master.domain.portbase}" />
      <entry key="glassfish.domain.name" value="${glassfish.master.domain.name}" />
      <entry key="glassfish.domain.admin.user" value="${user}" />
      <entry key="glassfish.domain.admin.pwd" value="${pwd}" />
      <entry key="glassfish.domain.admin.master.pwd" value="${masterpwd}" />

      <entry key="glassfish.domain.jms.port" value="${glassfish.master.domain.jms.port}" />
      <entry key="hibernate.search.shared.sourceBase" value="${master.slave.shared.hibernate.search.sourceBase}" />
      <entry key="hibernate.search.default.refresh" value="${master.hibernate.search.default.refresh}" />


      <entry key="glassfish.domain.start.maxWaitSeconds" value="${glassfish.domain.start.maxWaitSeconds}" />
      <entry key="glassfish.domain.stop.waitSeconds" value="${glassfish.domain.stop.waitSeconds}" />

    </propertyfile>
  </target>

  <target name="STANDALONE.prepareSetup">
    <antcall target="prepareInstallPack" />
    <antcall target="STANDALONE.changeProperties" />
  </target>

  <target name="STANDALONE.setup">
    <antcall target="STANDALONE.prepareSetup" />
    <ant antfile="build-integration-setup.xml" target="STANDALONE.setup" />
  </target>

 <target name="STANDALONE.setupWithPreparedGlassfish">
    <antcall target="STANDALONE.prepareSetup" />
    <ant antfile="build-integration-setup.xml" target="STANDALONE.prepareSetupWithPreparedGlassfish" />
    <ant antfile="build-integration-setup.xml" target="STANDALONE.setupWithPreparedGlassfish" />
  </target>

  <target name="STANDALONE.setupWithoutCoverage">
    <antcall target="STANDALONE.prepareSetup" />
    <ant antfile="build-integration-setup.xml" target="STANDALONE.setupWithoutCoverage" />
  </target>

</project>