<!-- Copyright FUJITSU LIMITED 2017-->
<project name="Setup Integration Test Environment - APP" basedir="." default="APP.setup">

  <description>Builds the asynchonous provisioning proxy project. This build file should be used by developers
    only, it will adapt the official property files with the developer's version. The difference between an official
    property file and the developer version should be path configurations only.
  </description>

  <property environment="env" />
  <property name="env.HOSTNAME" value="${env.COMPUTERNAME}" />

  <property name="dir.root" value="${basedir}/../.." />
  <property name="dir.build.src" location="${dir.root}" />
  <property name="dir.workapp" location="./workapp" />
  <property name="dir.workapp.setup" location="${dir.workapp}/oscm-app-setup" />
  <property name="app.domain.path" location="${dir.workapp.setup}/domains/app_domain" />


  <property name="devruntime.local" value="${dir.root}/oscm-devruntime/javares/local/${env.HOSTNAME}" />
  <property name="file.local.properties" location="${devruntime.local}/integration.properties" />
  <property name="dbproperties.file" location="${devruntime.local}/db-app.properties" />

  <property name="user" value="admin" />
  <property name="pwd" value="adminadmin" />
  <property name="masterpwd" value="changeit" />

  <echo level="info">Loading local properties from ${file.local.properties}</echo>
  <property file="${file.local.properties}" />

  <echo level="info">Loading local db properties from ${dbproperties.file}</echo>
  <property file="${dbproperties.file}" />

  <echoproperties />

  <target name="_prepareInstallPack">
    <delete dir="${dir.workapp}" />
    <unzip src="${dir.build.src}/oscm-build/result/package/oscm-app-install-pack/oscm-app-install-pack.zip" dest="${dir.workapp.setup}" />
    <copy file="${dir.build.src}/oscm-build/result/package/oscm-app-ear/oscm-app.ear" todir="${app.domain.path}/applications" overwrite="true" />
  </target>

  <target name="_prepareInstallPackForAWS">
    <delete dir="${dir.workapp}" />
    <unzip src="${dir.build.src}/oscm-build/result/package/oscm-aws-install-pack/oscm-aws-install-pack.zip"
      dest="${dir.workapp.setup}" />
    <copy file="${dir.build.src}/oscm-build/result/package/oscm-app-aws/oscm-app-aws.ear" todir="${app.domain.path}/applications" overwrite="true" />
  </target>

  <target name="_prepareInstallPackForOPENSTACK">
     <delete dir="${dir.workapp}" />
     <unzip src="${dir.build.src}/oscm-build/result/package/oscm-openstack-install-pack/oscm-openstack-install-pack.zip"
       dest="${dir.workapp.setup}" />
     <copy file="${dir.build.src}/oscm-build/result/package/oscm-app-openstack/oscm-app-openstack.ear" todir="${app.domain.path}/applications" overwrite="true" />
   </target>
  
  <target name="_prepareInstallPackForROR">
    <delete dir="${dir.workapp}" />
    <unzip src="${dir.build.src}/oscm-build/result/package/oscm-ror-install-pack/oscm-ror-install-pack.zip" dest="${dir.workapp.setup}" />
    <copy file="${dir.build.src}/oscm-build/result/package/oscm-app-ror/oscm-app-ror.ear" todir="${app.domain.path}/applications" overwrite="true" />
  </target>

  <target name="_changeProperties">
    <propertyfile file="${app.domain.path}/glassfish.properties" comment="glassfish properties">
      <entry key="GLASSFISH_HOME" value="${glassfish.home}" />
      <entry key="glassfish.domain.portadmin" value="${glassfish.app.domain.admin.port}" />
      <entry key="glassfish.domain.portbase" value="${glassfish.app.domain.portbase}" />
      <entry key="glassfish.domain.name" value="${glassfish.app.domain.name}" />
      <entry key="glassfish.domain.admin.user" value="${user}" />
      <entry key="glassfish.domain.admin.pwd" value="${pwd}" />
      <entry key="glassfish.domain.admin.master.pwd" value="${masterpwd}" />

      <entry key="glassfish.domain.stop.waitSeconds" value="${glassfish.domain.stop.waitSeconds}" />
      <entry key="glassfish.domain.start.maxWaitSeconds" value="${glassfish.domain.start.maxWaitSeconds}" />
      <entry key="MAIL_HOST" value="${mail.host}" />
      <entry key="MAIL_RESPONSE_ADDRESS" value="${mail.response.address}" />
      <entry key="MAIL_PORT" value="${mail.port}" />
      <entry key="MAIL_USE_AUTHENTICATION" value="${mail.use.authentication}" />
      <entry key="MAIL_USER" value="${mail.user}" />
      <entry key="MAIL_PWD" value="${mail.password}" />
      <entry key="MAIL_TIMEOUT" value="${mail.timeout}" />
      <entry key="MAIL_CONNECTIONTIMEOUT" value="${mail.connectiontimeout}" />
    </propertyfile>

    <copy file="${devruntime.local}/db-app.properties" tofile="${dir.workapp.setup}/databases/app_db/db.properties" overwrite="true" />
    <copy file="${devruntime.local}/configsettings_app.properties" tofile="${dir.workapp.setup}/databases/app_db/configsettings.properties"
      overwrite="true" />
  </target>

  <target name="_changePropertiesForAWS" depends="_changeProperties">
    <copy file="${devruntime.local}/configsettings_app_aws.properties" tofile="${dir.workapp.setup}/databases/app_db/configsettings_controller.properties" overwrite="true" />
  </target>

  <target name="_changePropertiesForOPENSTACK" depends="_changeProperties">
      <copy file="${devruntime.local}/configsettings_app_openstack.properties" tofile="${dir.workapp.setup}/databases/app_db/configsettings_controller.properties" overwrite="true" />
    </target>
  
  <target name="_changePropertiesForROR" depends="_changeProperties">
    <copy file="${devruntime.local}/configsettings_app_ror.properties" tofile="${dir.workapp.setup}/databases/app_db/configsettings_controller.properties" overwrite="true" />
  </target>

  <target name="_prepareSetup">
    <antcall target="_prepareInstallPack" />
    <antcall target="_changeProperties" />
  </target>

  <target name="_prepareSetupWithAWS">
    <antcall target="_prepareInstallPackForAWS" />
    <antcall target="_changePropertiesForAWS" />
  </target>

  <target name="_prepareSetupWithOPENSTACK">
    <antcall target="_prepareInstallPackForOPENSTACK" />
    <antcall target="_changePropertiesForOPENSTACK" />
  </target>
      
  <target name="APP-CONTROLLER-AWS.setup" description="Creates APP Domain, deploys AWS Controller and exchanges certificates">
    <antcall target="_prepareSetupWithAWS" />
    <ant antfile="build-integration-setup-app.xml" target="appSetupDeployController"/>
  </target>

  <target name="_prepareSetupWithROR" >
    <antcall target="_prepareInstallPackForROR" />
    <antcall target="_changePropertiesForROR" />
  </target>
	
  <target name="_prepareSetupWithTPS5" >
    <antcall target="_prepareInstallPackForTPS5" />
    <antcall target="_changePropertiesForTPS5" />
  </target>

  <target name="APP-CONTROLLER-ROR.setup" description="Creates APP Domain, deploys ROR and exchanges certificates">
    <antcall target="_prepareSetupWithROR" />
    <ant antfile="build-integration-setup-app.xml" target="appSetupDeployController"/>
  </target>

  <target name="APP-CONTROLLER-TPS5.setup" description="Creates APP Domain, deploys TPS5 and exchanges certificates">
    <antcall target="_prepareSetupWithTPS5" />
    <ant antfile="build-integration-setup-app.xml" target="appSetupDeployController"/>
  </target>

  <target name="APP-CONTROLLER-OPENSTACK.setup" description="Creates APP Domain, deploys OpenStack and exchanges certificates">
    <antcall target="_prepareSetupWithOPENSTACK" />
    <ant antfile="build-integration-setup-app.xml" target="appSetupDeployController" />
  </target>

  <target name="APP.setup">
    <antcall target="_prepareSetup" />
    <ant antfile="build-integration-setup-app.xml" target="stopAndDeleteAPPDomain" />
    <ant antfile="build-integration-setup-app.xml" target="initDB" />
    <ant antfile="build-integration-setup-app.xml" target="appSetupAndDeploy" />
  </target>

</project>
